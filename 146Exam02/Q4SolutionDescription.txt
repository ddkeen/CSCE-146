David Keen
CSCE 146H
EXAM 02 QUESTION 04 SOLUTION DESCRIPTION

For this problem we are writing an add method for a Max Heap array of Strings. We must preserve all MaxHeap properties such as all parents are greater than or equal (in length) than its 0-2 children and it can have duplicate values. We first check if the last index (first null element) is greater than or equal to the heap's size,  if so, the heap is full, so we can't add and we return. If not, we set the heap at this lastIndex to the String taken in the parameter. Now we have added, but must put the value at its correct index so we then call a helper method called bubbleUp(). This method copies the lastIndex to use and be changed. It uses a while loop that runs as long as our index is greater than 0, meaning we are not at the head of the heap, and the parent length is less than our value we are adding which is at the index we declared. I used compareTo, but you can also compare Strings by length directly. If we are in the loop this means the child is longer than the parent and we must swap the values. We just need to create a temporary holding the parent's value, set the parent value to the child value, set the child value to the temporary String, then set our index to the parents index which is (index-1/)2. We use breadth order so that we use the simple algebra to access parent and child. Since we use a while loop, the swaps just keep happening until either we reach the head or the String is in its correct place. Finally, back in the add method, we must add 1 to the lastIndex because we have added a value.